$date
	Wed Oct  4 21:38:23 2023
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 905a4dcf4ea30001 $end


$scope module testbench $end
$var reg 1 ! clk_tb $end
$var reg 1 " reset_tb $end

$scope begin unnamed$$_vcs_4 $end
$upscope $end


$scope begin unnamed$$_0 $end

$scope begin unnamed$$_1 $end

$scope begin unnamed$$_2 $end
$upscope $end

$upscope $end


$scope fork unnamed$$_vcs_0 $end

$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end

$upscope $end

$upscope $end


$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope begin unnamed$$_vcs_5 $end
$upscope $end


$scope begin unnamed$$_vcs_6 $end
$upscope $end


$scope begin unnamed$$_vcs_7 $end
$upscope $end


$scope module _if $end
$var wire 1 # clk $end
$var reg 1 $ rst $end
$upscope $end


$scope module DUT_0 $end
$var wire 1 # clk $end
$var wire 1 % reset $end

$scope module BUS[0].ID[0].ntrfs $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 & pndng $end
$var wire 16 ' D_pop [15:0] $end
$var wire 16 ( D_push [15:0] $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 1 + bus $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 . bs_grnt $end
$var wire 1 / clk_rd $end
$var wire 1 0 clk_wt $end
$var wire 1 1 en_r $end
$var wire 1 2 en_w $end
$var wire 1 3 rst_r $end
$var wire 1 4 rst_w $end
$var wire 1 5 p_s_w $end
$var wire 1 6 p_s_r $end
$var wire 1 7 bus_pre_wd $end

$scope module cntrl $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 8 8 D_in [15:8] $end
$var wire 1 . bs_grnt $end
$var wire 1 & pndng $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 4 rst_w $end
$var wire 1 3 rst_r $end
$var wire 1 5 p_s_w $end
$var wire 1 6 p_s_r $end
$var wire 1 2 en_w $end
$var wire 1 1 en_r $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 1 9 bs_rqst $end
$var reg 1 : trn_chng_pre $end
$var wire 2 ; cnt_rbtr [1:0] $end
$var wire 5 < count_w [4:0] $end
$var wire 5 = count_r [4:0] $end
$var wire 2 > s_ds_r [1:0] $end
$var wire 2 ? s_ds_w [1:0] $end
$var reg 1 @ cond_r $end
$var reg 1 A cond_w $end
$var wire 1 B rst_cntr_w $end
$var wire 1 C rst_cntr_r $end
$var wire 1 D rdi $end
$var wire 1 E clk_cntr_w $end
$var wire 1 F clk_cntr_r $end
$var wire 1 G cnt_eq_w $end
$var wire 1 H s_cmp $end
$var reg 1 I rd_cmp_out $end
$var reg 1 J bdcst $end
$var wire 1 K bs_bsy_pre $end
$var reg 8 L rd_cmp_a [7:0] $end
$var reg 8 M rd_cmp_b [7:0] $end
$var reg 1 N c_a $end
$var wire 1 O trn_chng_nthng_t_snd $end
$var reg 1 P bs_grnt_pre $end

$scope module bs_grnt_dly $end
$var wire 1 Q data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 R q $end
$upscope $end


$scope module bs_bsy_tri_buf $end
$var wire 1 K a $end
$var wire 1 , b $end
$var wire 1 . en $end
$upscope $end


$scope module arb_cntr $end
$var reg 2 S count [1:0] $end
$var wire 1 - clk $end
$var wire 1 % rst $end
$upscope $end


$scope module arb_st_mchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 T condition_a $end
$var wire 1 O trn_chng_nthng_t_snd $end
$var reg 1 U nxt_st $end

$scope module st0 $end
$var wire 1 V data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 W q $end
$upscope $end

$upscope $end


$scope module counter_w $end
$var reg 5 X count [4:0] $end
$var wire 1 E clk $end
$var wire 1 B rst $end
$upscope $end


$scope module counter_r $end
$var reg 5 Y count [4:0] $end
$var wire 1 F clk $end
$var wire 1 C rst $end
$upscope $end


$scope module buf_trn_chng $end
$var wire 1 Z a $end
$var wire 1 - b $end
$var wire 1 . en $end
$upscope $end


$scope module rdstmchn $end
$var wire 1 [ condition_r $end
$var reg 1 \ rdi $end
$var wire 1 % reset $end
$var wire 1 # clk $end
$var reg 2 ] s_ds_r [1:0] $end
$var reg 1 ^ s_cmp $end
$var reg 1 _ rst_cntr_r $end
$var reg 1 ` rst_r $end
$var reg 1 a p_s_r $end
$var reg 1 b en_r $end
$var reg 1 c push $end
$var reg 3 d nxt_st [2:0] $end
$var wire 3 e cur_st [2:0] $end

$scope module st0 $end
$var wire 1 f data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 g q $end
$upscope $end


$scope module st1 $end
$var wire 1 h data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 i q $end
$upscope $end


$scope module st2 $end
$var wire 1 j data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 k q $end
$upscope $end

$upscope $end


$scope module wtstmchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 l condition_w $end
$var reg 1 m bs_bsy $end
$var reg 1 n bs_rqst $end
$var reg 2 o s_ds_w [1:0] $end
$var reg 1 p rst_cntr_w $end
$var reg 1 q rst_w $end
$var reg 1 r p_s_w $end
$var reg 1 s en_w $end
$var reg 1 t pop $end
$var reg 3 u nxt_st [2:0] $end
$var wire 3 v cur_st [2:0] $end

$scope module st0 $end
$var wire 1 w data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 x q $end
$upscope $end


$scope module st1 $end
$var wire 1 y data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 z q $end
$upscope $end


$scope module st2 $end
$var wire 1 { data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 | q $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_wt $end
$var wire 1 5 sel_p_s $end
$var wire 1 } s_in $end
$var wire 1 4 rst $end
$var wire 1 0 clk $end
$var wire 16 ' P_in [15:0] $end
$var wire 1 7 s_out $end
$var wire 16 ~ P_out [15:0] $end
$var wire 16 "! q [15:0] $end
$var wire 16 "" d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 "# data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "$ q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 "% data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "& q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 "' data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "( q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 ") data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "* q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 "+ data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 ", q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 "- data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 ". q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 "/ data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "0 q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 "1 data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "2 q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 "3 data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "4 q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 "5 data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "6 q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 "7 data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "8 q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 "9 data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 ": q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 "; data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "< q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 "= data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "> q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 "? data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "@ q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 "A data $end
$var wire 1 0 clk $end
$var wire 1 4 reset $end
$var reg 1 "B q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 "C S_in $end
$var wire 1 "D P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "E S_out $end
$var wire 1 "F P_out $end

$scope module serial $end
$var wire 1 "C a $end
$var wire 1 "E b $end
$var wire 1 "G en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "D a $end
$var wire 1 "E b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 "H S_in $end
$var wire 1 "I P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "J S_out $end
$var wire 1 "K P_out $end

$scope module serial $end
$var wire 1 "H a $end
$var wire 1 "J b $end
$var wire 1 "L en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "I a $end
$var wire 1 "J b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 "M S_in $end
$var wire 1 "N P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "O S_out $end
$var wire 1 "P P_out $end

$scope module serial $end
$var wire 1 "M a $end
$var wire 1 "O b $end
$var wire 1 "Q en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "N a $end
$var wire 1 "O b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 "R S_in $end
$var wire 1 "S P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "T S_out $end
$var wire 1 "U P_out $end

$scope module serial $end
$var wire 1 "R a $end
$var wire 1 "T b $end
$var wire 1 "V en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "S a $end
$var wire 1 "T b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 "W S_in $end
$var wire 1 "X P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "Y S_out $end
$var wire 1 "Z P_out $end

$scope module serial $end
$var wire 1 "W a $end
$var wire 1 "Y b $end
$var wire 1 "[ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "X a $end
$var wire 1 "Y b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 "\ S_in $end
$var wire 1 "] P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "^ S_out $end
$var wire 1 "_ P_out $end

$scope module serial $end
$var wire 1 "\ a $end
$var wire 1 "^ b $end
$var wire 1 "` en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "] a $end
$var wire 1 "^ b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 "a S_in $end
$var wire 1 "b P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "c S_out $end
$var wire 1 "d P_out $end

$scope module serial $end
$var wire 1 "a a $end
$var wire 1 "c b $end
$var wire 1 "e en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "b a $end
$var wire 1 "c b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 "f S_in $end
$var wire 1 "g P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "h S_out $end
$var wire 1 "i P_out $end

$scope module serial $end
$var wire 1 "f a $end
$var wire 1 "h b $end
$var wire 1 "j en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "g a $end
$var wire 1 "h b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 "k S_in $end
$var wire 1 "l P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "m S_out $end
$var wire 1 "n P_out $end

$scope module serial $end
$var wire 1 "k a $end
$var wire 1 "m b $end
$var wire 1 "o en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "l a $end
$var wire 1 "m b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 "p S_in $end
$var wire 1 "q P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "r S_out $end
$var wire 1 "s P_out $end

$scope module serial $end
$var wire 1 "p a $end
$var wire 1 "r b $end
$var wire 1 "t en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "q a $end
$var wire 1 "r b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 "u S_in $end
$var wire 1 "v P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "w S_out $end
$var wire 1 "x P_out $end

$scope module serial $end
$var wire 1 "u a $end
$var wire 1 "w b $end
$var wire 1 "y en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "v a $end
$var wire 1 "w b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 "z S_in $end
$var wire 1 "{ P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 "| S_out $end
$var wire 1 "} P_out $end

$scope module serial $end
$var wire 1 "z a $end
$var wire 1 "| b $end
$var wire 1 "~ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 "{ a $end
$var wire 1 "| b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 #! S_in $end
$var wire 1 #" P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 ## S_out $end
$var wire 1 #$ P_out $end

$scope module serial $end
$var wire 1 #! a $end
$var wire 1 ## b $end
$var wire 1 #% en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #" a $end
$var wire 1 ## b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 #& S_in $end
$var wire 1 #' P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 #( S_out $end
$var wire 1 #) P_out $end

$scope module serial $end
$var wire 1 #& a $end
$var wire 1 #( b $end
$var wire 1 #* en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #' a $end
$var wire 1 #( b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 #+ S_in $end
$var wire 1 #, P_in $end
$var wire 1 5 sel_P_S $end
$var wire 1 #- S_out $end
$var wire 1 #. P_out $end

$scope module serial $end
$var wire 1 #+ a $end
$var wire 1 #- b $end
$var wire 1 #/ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #, a $end
$var wire 1 #- b $end
$var wire 1 5 en $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_rd $end
$var wire 1 6 sel_p_s $end
$var wire 1 + s_in $end
$var wire 1 3 rst $end
$var wire 1 / clk $end
$var wire 16 #0 P_in [15:0] $end
$var wire 1 #1 s_out $end
$var wire 16 ( P_out [15:0] $end
$var wire 16 #2 q [15:0] $end
$var wire 16 #3 d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 #4 data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #5 q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 #6 data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #7 q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 #8 data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #9 q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 #: data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #; q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 #< data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #= q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 #> data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #? q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 #@ data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #A q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 #B data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #C q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 #D data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #E q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 #F data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #G q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 #H data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #I q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 #J data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #K q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 #L data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #M q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 #N data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #O q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 #P data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #Q q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 #R data $end
$var wire 1 / clk $end
$var wire 1 3 reset $end
$var reg 1 #S q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 #T S_in $end
$var wire 1 #U P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #V S_out $end
$var wire 1 #W P_out $end

$scope module serial $end
$var wire 1 #T a $end
$var wire 1 #V b $end
$var wire 1 #X en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #U a $end
$var wire 1 #V b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 #Y S_in $end
$var wire 1 #Z P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #[ S_out $end
$var wire 1 #\ P_out $end

$scope module serial $end
$var wire 1 #Y a $end
$var wire 1 #[ b $end
$var wire 1 #] en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #Z a $end
$var wire 1 #[ b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 #^ S_in $end
$var wire 1 #_ P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #` S_out $end
$var wire 1 #a P_out $end

$scope module serial $end
$var wire 1 #^ a $end
$var wire 1 #` b $end
$var wire 1 #b en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #_ a $end
$var wire 1 #` b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 #c S_in $end
$var wire 1 #d P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #e S_out $end
$var wire 1 #f P_out $end

$scope module serial $end
$var wire 1 #c a $end
$var wire 1 #e b $end
$var wire 1 #g en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #d a $end
$var wire 1 #e b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 #h S_in $end
$var wire 1 #i P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #j S_out $end
$var wire 1 #k P_out $end

$scope module serial $end
$var wire 1 #h a $end
$var wire 1 #j b $end
$var wire 1 #l en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #i a $end
$var wire 1 #j b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 #m S_in $end
$var wire 1 #n P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #o S_out $end
$var wire 1 #p P_out $end

$scope module serial $end
$var wire 1 #m a $end
$var wire 1 #o b $end
$var wire 1 #q en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #n a $end
$var wire 1 #o b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 #r S_in $end
$var wire 1 #s P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #t S_out $end
$var wire 1 #u P_out $end

$scope module serial $end
$var wire 1 #r a $end
$var wire 1 #t b $end
$var wire 1 #v en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #s a $end
$var wire 1 #t b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 #w S_in $end
$var wire 1 #x P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #y S_out $end
$var wire 1 #z P_out $end

$scope module serial $end
$var wire 1 #w a $end
$var wire 1 #y b $end
$var wire 1 #{ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #x a $end
$var wire 1 #y b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 #| S_in $end
$var wire 1 #} P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 #~ S_out $end
$var wire 1 $! P_out $end

$scope module serial $end
$var wire 1 #| a $end
$var wire 1 #~ b $end
$var wire 1 $" en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 #} a $end
$var wire 1 #~ b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 $# S_in $end
$var wire 1 $$ P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $% S_out $end
$var wire 1 $& P_out $end

$scope module serial $end
$var wire 1 $# a $end
$var wire 1 $% b $end
$var wire 1 $' en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $$ a $end
$var wire 1 $% b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 $( S_in $end
$var wire 1 $) P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $* S_out $end
$var wire 1 $+ P_out $end

$scope module serial $end
$var wire 1 $( a $end
$var wire 1 $* b $end
$var wire 1 $, en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $) a $end
$var wire 1 $* b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 $- S_in $end
$var wire 1 $. P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $/ S_out $end
$var wire 1 $0 P_out $end

$scope module serial $end
$var wire 1 $- a $end
$var wire 1 $/ b $end
$var wire 1 $1 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $. a $end
$var wire 1 $/ b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 $2 S_in $end
$var wire 1 $3 P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $4 S_out $end
$var wire 1 $5 P_out $end

$scope module serial $end
$var wire 1 $2 a $end
$var wire 1 $4 b $end
$var wire 1 $6 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $3 a $end
$var wire 1 $4 b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 $7 S_in $end
$var wire 1 $8 P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $9 S_out $end
$var wire 1 $: P_out $end

$scope module serial $end
$var wire 1 $7 a $end
$var wire 1 $9 b $end
$var wire 1 $; en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $8 a $end
$var wire 1 $9 b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 $< S_in $end
$var wire 1 $= P_in $end
$var wire 1 6 sel_P_S $end
$var wire 1 $> S_out $end
$var wire 1 $? P_out $end

$scope module serial $end
$var wire 1 $< a $end
$var wire 1 $> b $end
$var wire 1 $@ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 $= a $end
$var wire 1 $> b $end
$var wire 1 6 en $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end


$scope module BUS[0].ID[1].ntrfs $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 $A pndng $end
$var wire 16 $B D_pop [15:0] $end
$var wire 16 $C D_push [15:0] $end
$var wire 1 $D push $end
$var wire 1 $E pop $end
$var wire 1 + bus $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 $F bs_grnt $end
$var wire 1 $G clk_rd $end
$var wire 1 $H clk_wt $end
$var wire 1 $I en_r $end
$var wire 1 $J en_w $end
$var wire 1 $K rst_r $end
$var wire 1 $L rst_w $end
$var wire 1 $M p_s_w $end
$var wire 1 $N p_s_r $end
$var wire 1 $O bus_pre_wd $end

$scope module cntrl $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 8 $P D_in [15:8] $end
$var wire 1 $F bs_grnt $end
$var wire 1 $A pndng $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 $L rst_w $end
$var wire 1 $K rst_r $end
$var wire 1 $M p_s_w $end
$var wire 1 $N p_s_r $end
$var wire 1 $J en_w $end
$var wire 1 $I en_r $end
$var wire 1 $D push $end
$var wire 1 $E pop $end
$var wire 1 $Q bs_rqst $end
$var reg 1 $R trn_chng_pre $end
$var wire 2 $S cnt_rbtr [1:0] $end
$var wire 5 $T count_w [4:0] $end
$var wire 5 $U count_r [4:0] $end
$var wire 2 $V s_ds_r [1:0] $end
$var wire 2 $W s_ds_w [1:0] $end
$var reg 1 $X cond_r $end
$var reg 1 $Y cond_w $end
$var wire 1 $Z rst_cntr_w $end
$var wire 1 $[ rst_cntr_r $end
$var wire 1 $\ rdi $end
$var wire 1 $] clk_cntr_w $end
$var wire 1 $^ clk_cntr_r $end
$var wire 1 $_ cnt_eq_w $end
$var wire 1 $` s_cmp $end
$var reg 1 $a rd_cmp_out $end
$var reg 1 $b bdcst $end
$var wire 1 $c bs_bsy_pre $end
$var reg 8 $d rd_cmp_a [7:0] $end
$var reg 8 $e rd_cmp_b [7:0] $end
$var reg 1 $f c_a $end
$var wire 1 $g trn_chng_nthng_t_snd $end
$var reg 1 $h bs_grnt_pre $end

$scope module bs_grnt_dly $end
$var wire 1 $i data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 $j q $end
$upscope $end


$scope module bs_bsy_tri_buf $end
$var wire 1 $c a $end
$var wire 1 , b $end
$var wire 1 $F en $end
$upscope $end


$scope module arb_cntr $end
$var reg 2 $k count [1:0] $end
$var wire 1 - clk $end
$var wire 1 % rst $end
$upscope $end


$scope module arb_st_mchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 $l condition_a $end
$var wire 1 $g trn_chng_nthng_t_snd $end
$var reg 1 $m nxt_st $end

$scope module st0 $end
$var wire 1 $n data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 $o q $end
$upscope $end

$upscope $end


$scope module counter_w $end
$var reg 5 $p count [4:0] $end
$var wire 1 $] clk $end
$var wire 1 $Z rst $end
$upscope $end


$scope module counter_r $end
$var reg 5 $q count [4:0] $end
$var wire 1 $^ clk $end
$var wire 1 $[ rst $end
$upscope $end


$scope module buf_trn_chng $end
$var wire 1 $r a $end
$var wire 1 - b $end
$var wire 1 $F en $end
$upscope $end


$scope module rdstmchn $end
$var wire 1 $s condition_r $end
$var reg 1 $t rdi $end
$var wire 1 % reset $end
$var wire 1 # clk $end
$var reg 2 $u s_ds_r [1:0] $end
$var reg 1 $v s_cmp $end
$var reg 1 $w rst_cntr_r $end
$var reg 1 $x rst_r $end
$var reg 1 $y p_s_r $end
$var reg 1 $z en_r $end
$var reg 1 ${ push $end
$var reg 3 $| nxt_st [2:0] $end
$var wire 3 $} cur_st [2:0] $end

$scope module st0 $end
$var wire 1 $~ data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %! q $end
$upscope $end


$scope module st1 $end
$var wire 1 %" data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %# q $end
$upscope $end


$scope module st2 $end
$var wire 1 %$ data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %% q $end
$upscope $end

$upscope $end


$scope module wtstmchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 %& condition_w $end
$var reg 1 %' bs_bsy $end
$var reg 1 %( bs_rqst $end
$var reg 2 %) s_ds_w [1:0] $end
$var reg 1 %* rst_cntr_w $end
$var reg 1 %+ rst_w $end
$var reg 1 %, p_s_w $end
$var reg 1 %- en_w $end
$var reg 1 %. pop $end
$var reg 3 %/ nxt_st [2:0] $end
$var wire 3 %0 cur_st [2:0] $end

$scope module st0 $end
$var wire 1 %1 data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %2 q $end
$upscope $end


$scope module st1 $end
$var wire 1 %3 data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %4 q $end
$upscope $end


$scope module st2 $end
$var wire 1 %5 data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 %6 q $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_wt $end
$var wire 1 $M sel_p_s $end
$var wire 1 %7 s_in $end
$var wire 1 $L rst $end
$var wire 1 $H clk $end
$var wire 16 $B P_in [15:0] $end
$var wire 1 $O s_out $end
$var wire 16 %8 P_out [15:0] $end
$var wire 16 %9 q [15:0] $end
$var wire 16 %: d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 %; data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %< q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 %= data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %> q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 %? data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %@ q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 %A data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %B q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 %C data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %D q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 %E data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %F q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 %G data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %H q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 %I data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %J q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 %K data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %L q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 %M data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %N q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 %O data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %P q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 %Q data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %R q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 %S data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %T q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 %U data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %V q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 %W data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %X q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 %Y data $end
$var wire 1 $H clk $end
$var wire 1 $L reset $end
$var reg 1 %Z q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 %[ S_in $end
$var wire 1 %\ P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %] S_out $end
$var wire 1 %^ P_out $end

$scope module serial $end
$var wire 1 %[ a $end
$var wire 1 %] b $end
$var wire 1 %_ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %\ a $end
$var wire 1 %] b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 %` S_in $end
$var wire 1 %a P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %b S_out $end
$var wire 1 %c P_out $end

$scope module serial $end
$var wire 1 %` a $end
$var wire 1 %b b $end
$var wire 1 %d en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %a a $end
$var wire 1 %b b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 %e S_in $end
$var wire 1 %f P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %g S_out $end
$var wire 1 %h P_out $end

$scope module serial $end
$var wire 1 %e a $end
$var wire 1 %g b $end
$var wire 1 %i en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %f a $end
$var wire 1 %g b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 %j S_in $end
$var wire 1 %k P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %l S_out $end
$var wire 1 %m P_out $end

$scope module serial $end
$var wire 1 %j a $end
$var wire 1 %l b $end
$var wire 1 %n en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %k a $end
$var wire 1 %l b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 %o S_in $end
$var wire 1 %p P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %q S_out $end
$var wire 1 %r P_out $end

$scope module serial $end
$var wire 1 %o a $end
$var wire 1 %q b $end
$var wire 1 %s en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %p a $end
$var wire 1 %q b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 %t S_in $end
$var wire 1 %u P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %v S_out $end
$var wire 1 %w P_out $end

$scope module serial $end
$var wire 1 %t a $end
$var wire 1 %v b $end
$var wire 1 %x en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %u a $end
$var wire 1 %v b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 %y S_in $end
$var wire 1 %z P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 %{ S_out $end
$var wire 1 %| P_out $end

$scope module serial $end
$var wire 1 %y a $end
$var wire 1 %{ b $end
$var wire 1 %} en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 %z a $end
$var wire 1 %{ b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 %~ S_in $end
$var wire 1 &! P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &" S_out $end
$var wire 1 &# P_out $end

$scope module serial $end
$var wire 1 %~ a $end
$var wire 1 &" b $end
$var wire 1 &$ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &! a $end
$var wire 1 &" b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 &% S_in $end
$var wire 1 && P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &' S_out $end
$var wire 1 &( P_out $end

$scope module serial $end
$var wire 1 &% a $end
$var wire 1 &' b $end
$var wire 1 &) en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 && a $end
$var wire 1 &' b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 &* S_in $end
$var wire 1 &+ P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &, S_out $end
$var wire 1 &- P_out $end

$scope module serial $end
$var wire 1 &* a $end
$var wire 1 &, b $end
$var wire 1 &. en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &+ a $end
$var wire 1 &, b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 &/ S_in $end
$var wire 1 &0 P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &1 S_out $end
$var wire 1 &2 P_out $end

$scope module serial $end
$var wire 1 &/ a $end
$var wire 1 &1 b $end
$var wire 1 &3 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &0 a $end
$var wire 1 &1 b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 &4 S_in $end
$var wire 1 &5 P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &6 S_out $end
$var wire 1 &7 P_out $end

$scope module serial $end
$var wire 1 &4 a $end
$var wire 1 &6 b $end
$var wire 1 &8 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &5 a $end
$var wire 1 &6 b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 &9 S_in $end
$var wire 1 &: P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &; S_out $end
$var wire 1 &< P_out $end

$scope module serial $end
$var wire 1 &9 a $end
$var wire 1 &; b $end
$var wire 1 &= en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &: a $end
$var wire 1 &; b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 &> S_in $end
$var wire 1 &? P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &@ S_out $end
$var wire 1 &A P_out $end

$scope module serial $end
$var wire 1 &> a $end
$var wire 1 &@ b $end
$var wire 1 &B en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &? a $end
$var wire 1 &@ b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 &C S_in $end
$var wire 1 &D P_in $end
$var wire 1 $M sel_P_S $end
$var wire 1 &E S_out $end
$var wire 1 &F P_out $end

$scope module serial $end
$var wire 1 &C a $end
$var wire 1 &E b $end
$var wire 1 &G en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &D a $end
$var wire 1 &E b $end
$var wire 1 $M en $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_rd $end
$var wire 1 $N sel_p_s $end
$var wire 1 + s_in $end
$var wire 1 $K rst $end
$var wire 1 $G clk $end
$var wire 16 &H P_in [15:0] $end
$var wire 1 &I s_out $end
$var wire 16 $C P_out [15:0] $end
$var wire 16 &J q [15:0] $end
$var wire 16 &K d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 &L data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &M q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 &N data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &O q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 &P data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &Q q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 &R data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &S q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 &T data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &U q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 &V data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &W q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 &X data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &Y q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 &Z data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &[ q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 &\ data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &] q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 &^ data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &_ q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 &` data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &a q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 &b data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &c q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 &d data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &e q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 &f data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &g q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 &h data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &i q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 &j data $end
$var wire 1 $G clk $end
$var wire 1 $K reset $end
$var reg 1 &k q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 &l S_in $end
$var wire 1 &m P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 &n S_out $end
$var wire 1 &o P_out $end

$scope module serial $end
$var wire 1 &l a $end
$var wire 1 &n b $end
$var wire 1 &p en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &m a $end
$var wire 1 &n b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 &q S_in $end
$var wire 1 &r P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 &s S_out $end
$var wire 1 &t P_out $end

$scope module serial $end
$var wire 1 &q a $end
$var wire 1 &s b $end
$var wire 1 &u en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &r a $end
$var wire 1 &s b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 &v S_in $end
$var wire 1 &w P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 &x S_out $end
$var wire 1 &y P_out $end

$scope module serial $end
$var wire 1 &v a $end
$var wire 1 &x b $end
$var wire 1 &z en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &w a $end
$var wire 1 &x b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 &{ S_in $end
$var wire 1 &| P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 &} S_out $end
$var wire 1 &~ P_out $end

$scope module serial $end
$var wire 1 &{ a $end
$var wire 1 &} b $end
$var wire 1 '! en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 &| a $end
$var wire 1 &} b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 '" S_in $end
$var wire 1 '# P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 '$ S_out $end
$var wire 1 '% P_out $end

$scope module serial $end
$var wire 1 '" a $end
$var wire 1 '$ b $end
$var wire 1 '& en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '# a $end
$var wire 1 '$ b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 '' S_in $end
$var wire 1 '( P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 ') S_out $end
$var wire 1 '* P_out $end

$scope module serial $end
$var wire 1 '' a $end
$var wire 1 ') b $end
$var wire 1 '+ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '( a $end
$var wire 1 ') b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 ', S_in $end
$var wire 1 '- P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 '. S_out $end
$var wire 1 '/ P_out $end

$scope module serial $end
$var wire 1 ', a $end
$var wire 1 '. b $end
$var wire 1 '0 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '- a $end
$var wire 1 '. b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 '1 S_in $end
$var wire 1 '2 P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 '3 S_out $end
$var wire 1 '4 P_out $end

$scope module serial $end
$var wire 1 '1 a $end
$var wire 1 '3 b $end
$var wire 1 '5 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '2 a $end
$var wire 1 '3 b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 '6 S_in $end
$var wire 1 '7 P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 '8 S_out $end
$var wire 1 '9 P_out $end

$scope module serial $end
$var wire 1 '6 a $end
$var wire 1 '8 b $end
$var wire 1 ': en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '7 a $end
$var wire 1 '8 b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 '; S_in $end
$var wire 1 '< P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 '= S_out $end
$var wire 1 '> P_out $end

$scope module serial $end
$var wire 1 '; a $end
$var wire 1 '= b $end
$var wire 1 '? en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 '< a $end
$var wire 1 '= b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 '@ S_in $end
$var wire 1 'A P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 'B S_out $end
$var wire 1 'C P_out $end

$scope module serial $end
$var wire 1 '@ a $end
$var wire 1 'B b $end
$var wire 1 'D en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 'A a $end
$var wire 1 'B b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 'E S_in $end
$var wire 1 'F P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 'G S_out $end
$var wire 1 'H P_out $end

$scope module serial $end
$var wire 1 'E a $end
$var wire 1 'G b $end
$var wire 1 'I en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 'F a $end
$var wire 1 'G b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 'J S_in $end
$var wire 1 'K P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 'L S_out $end
$var wire 1 'M P_out $end

$scope module serial $end
$var wire 1 'J a $end
$var wire 1 'L b $end
$var wire 1 'N en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 'K a $end
$var wire 1 'L b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 'O S_in $end
$var wire 1 'P P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 'Q S_out $end
$var wire 1 'R P_out $end

$scope module serial $end
$var wire 1 'O a $end
$var wire 1 'Q b $end
$var wire 1 'S en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 'P a $end
$var wire 1 'Q b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 'T S_in $end
$var wire 1 'U P_in $end
$var wire 1 $N sel_P_S $end
$var wire 1 'V S_out $end
$var wire 1 'W P_out $end

$scope module serial $end
$var wire 1 'T a $end
$var wire 1 'V b $end
$var wire 1 'X en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 'U a $end
$var wire 1 'V b $end
$var wire 1 $N en $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end


$scope module BUS[0].ID[2].ntrfs $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 'Y pndng $end
$var wire 16 'Z D_pop [15:0] $end
$var wire 16 '[ D_push [15:0] $end
$var wire 1 '\ push $end
$var wire 1 '] pop $end
$var wire 1 + bus $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 '^ bs_grnt $end
$var wire 1 '_ clk_rd $end
$var wire 1 '` clk_wt $end
$var wire 1 'a en_r $end
$var wire 1 'b en_w $end
$var wire 1 'c rst_r $end
$var wire 1 'd rst_w $end
$var wire 1 'e p_s_w $end
$var wire 1 'f p_s_r $end
$var wire 1 'g bus_pre_wd $end

$scope module cntrl $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 8 'h D_in [15:8] $end
$var wire 1 '^ bs_grnt $end
$var wire 1 'Y pndng $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 'd rst_w $end
$var wire 1 'c rst_r $end
$var wire 1 'e p_s_w $end
$var wire 1 'f p_s_r $end
$var wire 1 'b en_w $end
$var wire 1 'a en_r $end
$var wire 1 '\ push $end
$var wire 1 '] pop $end
$var wire 1 'i bs_rqst $end
$var reg 1 'j trn_chng_pre $end
$var wire 2 'k cnt_rbtr [1:0] $end
$var wire 5 'l count_w [4:0] $end
$var wire 5 'm count_r [4:0] $end
$var wire 2 'n s_ds_r [1:0] $end
$var wire 2 'o s_ds_w [1:0] $end
$var reg 1 'p cond_r $end
$var reg 1 'q cond_w $end
$var wire 1 'r rst_cntr_w $end
$var wire 1 's rst_cntr_r $end
$var wire 1 't rdi $end
$var wire 1 'u clk_cntr_w $end
$var wire 1 'v clk_cntr_r $end
$var wire 1 'w cnt_eq_w $end
$var wire 1 'x s_cmp $end
$var reg 1 'y rd_cmp_out $end
$var reg 1 'z bdcst $end
$var wire 1 '{ bs_bsy_pre $end
$var reg 8 '| rd_cmp_a [7:0] $end
$var reg 8 '} rd_cmp_b [7:0] $end
$var reg 1 '~ c_a $end
$var wire 1 (! trn_chng_nthng_t_snd $end
$var reg 1 (" bs_grnt_pre $end

$scope module bs_grnt_dly $end
$var wire 1 (# data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 ($ q $end
$upscope $end


$scope module bs_bsy_tri_buf $end
$var wire 1 '{ a $end
$var wire 1 , b $end
$var wire 1 '^ en $end
$upscope $end


$scope module arb_cntr $end
$var reg 2 (% count [1:0] $end
$var wire 1 - clk $end
$var wire 1 % rst $end
$upscope $end


$scope module arb_st_mchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 (& condition_a $end
$var wire 1 (! trn_chng_nthng_t_snd $end
$var reg 1 (' nxt_st $end

$scope module st0 $end
$var wire 1 (( data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 () q $end
$upscope $end

$upscope $end


$scope module counter_w $end
$var reg 5 (* count [4:0] $end
$var wire 1 'u clk $end
$var wire 1 'r rst $end
$upscope $end


$scope module counter_r $end
$var reg 5 (+ count [4:0] $end
$var wire 1 'v clk $end
$var wire 1 's rst $end
$upscope $end


$scope module buf_trn_chng $end
$var wire 1 (, a $end
$var wire 1 - b $end
$var wire 1 '^ en $end
$upscope $end


$scope module rdstmchn $end
$var wire 1 (- condition_r $end
$var reg 1 (. rdi $end
$var wire 1 % reset $end
$var wire 1 # clk $end
$var reg 2 (/ s_ds_r [1:0] $end
$var reg 1 (0 s_cmp $end
$var reg 1 (1 rst_cntr_r $end
$var reg 1 (2 rst_r $end
$var reg 1 (3 p_s_r $end
$var reg 1 (4 en_r $end
$var reg 1 (5 push $end
$var reg 3 (6 nxt_st [2:0] $end
$var wire 3 (7 cur_st [2:0] $end

$scope module st0 $end
$var wire 1 (8 data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (9 q $end
$upscope $end


$scope module st1 $end
$var wire 1 (: data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (; q $end
$upscope $end


$scope module st2 $end
$var wire 1 (< data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (= q $end
$upscope $end

$upscope $end


$scope module wtstmchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 (> condition_w $end
$var reg 1 (? bs_bsy $end
$var reg 1 (@ bs_rqst $end
$var reg 2 (A s_ds_w [1:0] $end
$var reg 1 (B rst_cntr_w $end
$var reg 1 (C rst_w $end
$var reg 1 (D p_s_w $end
$var reg 1 (E en_w $end
$var reg 1 (F pop $end
$var reg 3 (G nxt_st [2:0] $end
$var wire 3 (H cur_st [2:0] $end

$scope module st0 $end
$var wire 1 (I data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (J q $end
$upscope $end


$scope module st1 $end
$var wire 1 (K data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (L q $end
$upscope $end


$scope module st2 $end
$var wire 1 (M data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 (N q $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_wt $end
$var wire 1 'e sel_p_s $end
$var wire 1 (O s_in $end
$var wire 1 'd rst $end
$var wire 1 '` clk $end
$var wire 16 'Z P_in [15:0] $end
$var wire 1 'g s_out $end
$var wire 16 (P P_out [15:0] $end
$var wire 16 (Q q [15:0] $end
$var wire 16 (R d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 (S data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (T q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 (U data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (V q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 (W data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (X q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 (Y data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (Z q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 ([ data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (\ q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 (] data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (^ q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 (_ data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (` q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 (a data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (b q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 (c data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (d q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 (e data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (f q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 (g data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (h q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 (i data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (j q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 (k data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (l q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 (m data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (n q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 (o data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (p q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 (q data $end
$var wire 1 '` clk $end
$var wire 1 'd reset $end
$var reg 1 (r q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 (s S_in $end
$var wire 1 (t P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 (u S_out $end
$var wire 1 (v P_out $end

$scope module serial $end
$var wire 1 (s a $end
$var wire 1 (u b $end
$var wire 1 (w en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 (t a $end
$var wire 1 (u b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 (x S_in $end
$var wire 1 (y P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 (z S_out $end
$var wire 1 ({ P_out $end

$scope module serial $end
$var wire 1 (x a $end
$var wire 1 (z b $end
$var wire 1 (| en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 (y a $end
$var wire 1 (z b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 (} S_in $end
$var wire 1 (~ P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )! S_out $end
$var wire 1 )" P_out $end

$scope module serial $end
$var wire 1 (} a $end
$var wire 1 )! b $end
$var wire 1 )# en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 (~ a $end
$var wire 1 )! b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 )$ S_in $end
$var wire 1 )% P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )& S_out $end
$var wire 1 )' P_out $end

$scope module serial $end
$var wire 1 )$ a $end
$var wire 1 )& b $end
$var wire 1 )( en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )% a $end
$var wire 1 )& b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 )) S_in $end
$var wire 1 )* P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )+ S_out $end
$var wire 1 ), P_out $end

$scope module serial $end
$var wire 1 )) a $end
$var wire 1 )+ b $end
$var wire 1 )- en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )* a $end
$var wire 1 )+ b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 ). S_in $end
$var wire 1 )/ P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )0 S_out $end
$var wire 1 )1 P_out $end

$scope module serial $end
$var wire 1 ). a $end
$var wire 1 )0 b $end
$var wire 1 )2 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )/ a $end
$var wire 1 )0 b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 )3 S_in $end
$var wire 1 )4 P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )5 S_out $end
$var wire 1 )6 P_out $end

$scope module serial $end
$var wire 1 )3 a $end
$var wire 1 )5 b $end
$var wire 1 )7 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )4 a $end
$var wire 1 )5 b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 )8 S_in $end
$var wire 1 )9 P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 ): S_out $end
$var wire 1 ); P_out $end

$scope module serial $end
$var wire 1 )8 a $end
$var wire 1 ): b $end
$var wire 1 )< en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )9 a $end
$var wire 1 ): b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 )= S_in $end
$var wire 1 )> P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )? S_out $end
$var wire 1 )@ P_out $end

$scope module serial $end
$var wire 1 )= a $end
$var wire 1 )? b $end
$var wire 1 )A en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )> a $end
$var wire 1 )? b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 )B S_in $end
$var wire 1 )C P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )D S_out $end
$var wire 1 )E P_out $end

$scope module serial $end
$var wire 1 )B a $end
$var wire 1 )D b $end
$var wire 1 )F en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )C a $end
$var wire 1 )D b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 )G S_in $end
$var wire 1 )H P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )I S_out $end
$var wire 1 )J P_out $end

$scope module serial $end
$var wire 1 )G a $end
$var wire 1 )I b $end
$var wire 1 )K en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )H a $end
$var wire 1 )I b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 )L S_in $end
$var wire 1 )M P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )N S_out $end
$var wire 1 )O P_out $end

$scope module serial $end
$var wire 1 )L a $end
$var wire 1 )N b $end
$var wire 1 )P en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )M a $end
$var wire 1 )N b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 )Q S_in $end
$var wire 1 )R P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )S S_out $end
$var wire 1 )T P_out $end

$scope module serial $end
$var wire 1 )Q a $end
$var wire 1 )S b $end
$var wire 1 )U en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )R a $end
$var wire 1 )S b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 )V S_in $end
$var wire 1 )W P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )X S_out $end
$var wire 1 )Y P_out $end

$scope module serial $end
$var wire 1 )V a $end
$var wire 1 )X b $end
$var wire 1 )Z en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )W a $end
$var wire 1 )X b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 )[ S_in $end
$var wire 1 )\ P_in $end
$var wire 1 'e sel_P_S $end
$var wire 1 )] S_out $end
$var wire 1 )^ P_out $end

$scope module serial $end
$var wire 1 )[ a $end
$var wire 1 )] b $end
$var wire 1 )_ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 )\ a $end
$var wire 1 )] b $end
$var wire 1 'e en $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_rd $end
$var wire 1 'f sel_p_s $end
$var wire 1 + s_in $end
$var wire 1 'c rst $end
$var wire 1 '_ clk $end
$var wire 16 )` P_in [15:0] $end
$var wire 1 )a s_out $end
$var wire 16 '[ P_out [15:0] $end
$var wire 16 )b q [15:0] $end
$var wire 16 )c d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 )d data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )e q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 )f data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )g q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 )h data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )i q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 )j data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )k q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 )l data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )m q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 )n data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )o q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 )p data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )q q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 )r data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )s q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 )t data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )u q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 )v data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )w q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 )x data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )y q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 )z data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 ){ q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 )| data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 )} q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 )~ data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 *! q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 *" data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 *# q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 *$ data $end
$var wire 1 '_ clk $end
$var wire 1 'c reset $end
$var reg 1 *% q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 *& S_in $end
$var wire 1 *' P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *( S_out $end
$var wire 1 *) P_out $end

$scope module serial $end
$var wire 1 *& a $end
$var wire 1 *( b $end
$var wire 1 ** en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *' a $end
$var wire 1 *( b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 *+ S_in $end
$var wire 1 *, P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *- S_out $end
$var wire 1 *. P_out $end

$scope module serial $end
$var wire 1 *+ a $end
$var wire 1 *- b $end
$var wire 1 */ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *, a $end
$var wire 1 *- b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 *0 S_in $end
$var wire 1 *1 P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *2 S_out $end
$var wire 1 *3 P_out $end

$scope module serial $end
$var wire 1 *0 a $end
$var wire 1 *2 b $end
$var wire 1 *4 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *1 a $end
$var wire 1 *2 b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 *5 S_in $end
$var wire 1 *6 P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *7 S_out $end
$var wire 1 *8 P_out $end

$scope module serial $end
$var wire 1 *5 a $end
$var wire 1 *7 b $end
$var wire 1 *9 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *6 a $end
$var wire 1 *7 b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 *: S_in $end
$var wire 1 *; P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *< S_out $end
$var wire 1 *= P_out $end

$scope module serial $end
$var wire 1 *: a $end
$var wire 1 *< b $end
$var wire 1 *> en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *; a $end
$var wire 1 *< b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 *? S_in $end
$var wire 1 *@ P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *A S_out $end
$var wire 1 *B P_out $end

$scope module serial $end
$var wire 1 *? a $end
$var wire 1 *A b $end
$var wire 1 *C en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *@ a $end
$var wire 1 *A b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 *D S_in $end
$var wire 1 *E P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *F S_out $end
$var wire 1 *G P_out $end

$scope module serial $end
$var wire 1 *D a $end
$var wire 1 *F b $end
$var wire 1 *H en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *E a $end
$var wire 1 *F b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 *I S_in $end
$var wire 1 *J P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *K S_out $end
$var wire 1 *L P_out $end

$scope module serial $end
$var wire 1 *I a $end
$var wire 1 *K b $end
$var wire 1 *M en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *J a $end
$var wire 1 *K b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 *N S_in $end
$var wire 1 *O P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *P S_out $end
$var wire 1 *Q P_out $end

$scope module serial $end
$var wire 1 *N a $end
$var wire 1 *P b $end
$var wire 1 *R en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *O a $end
$var wire 1 *P b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 *S S_in $end
$var wire 1 *T P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *U S_out $end
$var wire 1 *V P_out $end

$scope module serial $end
$var wire 1 *S a $end
$var wire 1 *U b $end
$var wire 1 *W en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *T a $end
$var wire 1 *U b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 *X S_in $end
$var wire 1 *Y P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *Z S_out $end
$var wire 1 *[ P_out $end

$scope module serial $end
$var wire 1 *X a $end
$var wire 1 *Z b $end
$var wire 1 *\ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *Y a $end
$var wire 1 *Z b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 *] S_in $end
$var wire 1 *^ P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *_ S_out $end
$var wire 1 *` P_out $end

$scope module serial $end
$var wire 1 *] a $end
$var wire 1 *_ b $end
$var wire 1 *a en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *^ a $end
$var wire 1 *_ b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 *b S_in $end
$var wire 1 *c P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *d S_out $end
$var wire 1 *e P_out $end

$scope module serial $end
$var wire 1 *b a $end
$var wire 1 *d b $end
$var wire 1 *f en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *c a $end
$var wire 1 *d b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 *g S_in $end
$var wire 1 *h P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *i S_out $end
$var wire 1 *j P_out $end

$scope module serial $end
$var wire 1 *g a $end
$var wire 1 *i b $end
$var wire 1 *k en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *h a $end
$var wire 1 *i b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 *l S_in $end
$var wire 1 *m P_in $end
$var wire 1 'f sel_P_S $end
$var wire 1 *n S_out $end
$var wire 1 *o P_out $end

$scope module serial $end
$var wire 1 *l a $end
$var wire 1 *n b $end
$var wire 1 *p en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 *m a $end
$var wire 1 *n b $end
$var wire 1 'f en $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end


$scope module BUS[0].ID[3].ntrfs $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 *q pndng $end
$var wire 16 *r D_pop [15:0] $end
$var wire 16 *s D_push [15:0] $end
$var wire 1 *t push $end
$var wire 1 *u pop $end
$var wire 1 + bus $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 *v bs_grnt $end
$var wire 1 *w clk_rd $end
$var wire 1 *x clk_wt $end
$var wire 1 *y en_r $end
$var wire 1 *z en_w $end
$var wire 1 *{ rst_r $end
$var wire 1 *| rst_w $end
$var wire 1 *} p_s_w $end
$var wire 1 *~ p_s_r $end
$var wire 1 +! bus_pre_wd $end

$scope module cntrl $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 8 +" D_in [15:8] $end
$var wire 1 *v bs_grnt $end
$var wire 1 *q pndng $end
$var wire 1 , bs_bsy $end
$var wire 1 - trn_chng $end
$var wire 1 *| rst_w $end
$var wire 1 *{ rst_r $end
$var wire 1 *} p_s_w $end
$var wire 1 *~ p_s_r $end
$var wire 1 *z en_w $end
$var wire 1 *y en_r $end
$var wire 1 *t push $end
$var wire 1 *u pop $end
$var wire 1 +# bs_rqst $end
$var reg 1 +$ trn_chng_pre $end
$var wire 2 +% cnt_rbtr [1:0] $end
$var wire 5 +& count_w [4:0] $end
$var wire 5 +' count_r [4:0] $end
$var wire 2 +( s_ds_r [1:0] $end
$var wire 2 +) s_ds_w [1:0] $end
$var reg 1 +* cond_r $end
$var reg 1 ++ cond_w $end
$var wire 1 +, rst_cntr_w $end
$var wire 1 +- rst_cntr_r $end
$var wire 1 +. rdi $end
$var wire 1 +/ clk_cntr_w $end
$var wire 1 +0 clk_cntr_r $end
$var wire 1 +1 cnt_eq_w $end
$var wire 1 +2 s_cmp $end
$var reg 1 +3 rd_cmp_out $end
$var reg 1 +4 bdcst $end
$var wire 1 +5 bs_bsy_pre $end
$var reg 8 +6 rd_cmp_a [7:0] $end
$var reg 8 +7 rd_cmp_b [7:0] $end
$var reg 1 +8 c_a $end
$var wire 1 +9 trn_chng_nthng_t_snd $end
$var reg 1 +: bs_grnt_pre $end

$scope module bs_grnt_dly $end
$var wire 1 +; data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +< q $end
$upscope $end


$scope module bs_bsy_tri_buf $end
$var wire 1 +5 a $end
$var wire 1 , b $end
$var wire 1 *v en $end
$upscope $end


$scope module arb_cntr $end
$var reg 2 += count [1:0] $end
$var wire 1 - clk $end
$var wire 1 % rst $end
$upscope $end


$scope module arb_st_mchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 +> condition_a $end
$var wire 1 +9 trn_chng_nthng_t_snd $end
$var reg 1 +? nxt_st $end

$scope module st0 $end
$var wire 1 +@ data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +A q $end
$upscope $end

$upscope $end


$scope module counter_w $end
$var reg 5 +B count [4:0] $end
$var wire 1 +/ clk $end
$var wire 1 +, rst $end
$upscope $end


$scope module counter_r $end
$var reg 5 +C count [4:0] $end
$var wire 1 +0 clk $end
$var wire 1 +- rst $end
$upscope $end


$scope module buf_trn_chng $end
$var wire 1 +D a $end
$var wire 1 - b $end
$var wire 1 *v en $end
$upscope $end


$scope module rdstmchn $end
$var wire 1 +E condition_r $end
$var reg 1 +F rdi $end
$var wire 1 % reset $end
$var wire 1 # clk $end
$var reg 2 +G s_ds_r [1:0] $end
$var reg 1 +H s_cmp $end
$var reg 1 +I rst_cntr_r $end
$var reg 1 +J rst_r $end
$var reg 1 +K p_s_r $end
$var reg 1 +L en_r $end
$var reg 1 +M push $end
$var reg 3 +N nxt_st [2:0] $end
$var wire 3 +O cur_st [2:0] $end

$scope module st0 $end
$var wire 1 +P data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +Q q $end
$upscope $end


$scope module st1 $end
$var wire 1 +R data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +S q $end
$upscope $end


$scope module st2 $end
$var wire 1 +T data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +U q $end
$upscope $end

$upscope $end


$scope module wtstmchn $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var wire 1 +V condition_w $end
$var reg 1 +W bs_bsy $end
$var reg 1 +X bs_rqst $end
$var reg 2 +Y s_ds_w [1:0] $end
$var reg 1 +Z rst_cntr_w $end
$var reg 1 +[ rst_w $end
$var reg 1 +\ p_s_w $end
$var reg 1 +] en_w $end
$var reg 1 +^ pop $end
$var reg 3 +_ nxt_st [2:0] $end
$var wire 3 +` cur_st [2:0] $end

$scope module st0 $end
$var wire 1 +a data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +b q $end
$upscope $end


$scope module st1 $end
$var wire 1 +c data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +d q $end
$upscope $end


$scope module st2 $end
$var wire 1 +e data $end
$var wire 1 # clk $end
$var wire 1 % reset $end
$var reg 1 +f q $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_wt $end
$var wire 1 *} sel_p_s $end
$var wire 1 +g s_in $end
$var wire 1 *| rst $end
$var wire 1 *x clk $end
$var wire 16 *r P_in [15:0] $end
$var wire 1 +! s_out $end
$var wire 16 +h P_out [15:0] $end
$var wire 16 +i q [15:0] $end
$var wire 16 +j d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 +k data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +l q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 +m data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +n q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 +o data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +p q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 +q data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +r q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 +s data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +t q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 +u data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +v q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 +w data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +x q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 +y data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +z q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 +{ data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +| q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 +} data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 +~ q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 ,! data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ," q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 ,# data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ,$ q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 ,% data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ,& q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 ,' data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ,( q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 ,) data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ,* q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 ,+ data $end
$var wire 1 *x clk $end
$var wire 1 *| reset $end
$var reg 1 ,, q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 ,- S_in $end
$var wire 1 ,. P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,/ S_out $end
$var wire 1 ,0 P_out $end

$scope module serial $end
$var wire 1 ,- a $end
$var wire 1 ,/ b $end
$var wire 1 ,1 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,. a $end
$var wire 1 ,/ b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 ,2 S_in $end
$var wire 1 ,3 P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,4 S_out $end
$var wire 1 ,5 P_out $end

$scope module serial $end
$var wire 1 ,2 a $end
$var wire 1 ,4 b $end
$var wire 1 ,6 en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,3 a $end
$var wire 1 ,4 b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 ,7 S_in $end
$var wire 1 ,8 P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,9 S_out $end
$var wire 1 ,: P_out $end

$scope module serial $end
$var wire 1 ,7 a $end
$var wire 1 ,9 b $end
$var wire 1 ,; en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,8 a $end
$var wire 1 ,9 b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 ,< S_in $end
$var wire 1 ,= P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,> S_out $end
$var wire 1 ,? P_out $end

$scope module serial $end
$var wire 1 ,< a $end
$var wire 1 ,> b $end
$var wire 1 ,@ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,= a $end
$var wire 1 ,> b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 ,A S_in $end
$var wire 1 ,B P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,C S_out $end
$var wire 1 ,D P_out $end

$scope module serial $end
$var wire 1 ,A a $end
$var wire 1 ,C b $end
$var wire 1 ,E en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,B a $end
$var wire 1 ,C b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 ,F S_in $end
$var wire 1 ,G P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,H S_out $end
$var wire 1 ,I P_out $end

$scope module serial $end
$var wire 1 ,F a $end
$var wire 1 ,H b $end
$var wire 1 ,J en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,G a $end
$var wire 1 ,H b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 ,K S_in $end
$var wire 1 ,L P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,M S_out $end
$var wire 1 ,N P_out $end

$scope module serial $end
$var wire 1 ,K a $end
$var wire 1 ,M b $end
$var wire 1 ,O en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,L a $end
$var wire 1 ,M b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 ,P S_in $end
$var wire 1 ,Q P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,R S_out $end
$var wire 1 ,S P_out $end

$scope module serial $end
$var wire 1 ,P a $end
$var wire 1 ,R b $end
$var wire 1 ,T en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,Q a $end
$var wire 1 ,R b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 ,U S_in $end
$var wire 1 ,V P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,W S_out $end
$var wire 1 ,X P_out $end

$scope module serial $end
$var wire 1 ,U a $end
$var wire 1 ,W b $end
$var wire 1 ,Y en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,V a $end
$var wire 1 ,W b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 ,Z S_in $end
$var wire 1 ,[ P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,\ S_out $end
$var wire 1 ,] P_out $end

$scope module serial $end
$var wire 1 ,Z a $end
$var wire 1 ,\ b $end
$var wire 1 ,^ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,[ a $end
$var wire 1 ,\ b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 ,_ S_in $end
$var wire 1 ,` P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,a S_out $end
$var wire 1 ,b P_out $end

$scope module serial $end
$var wire 1 ,_ a $end
$var wire 1 ,a b $end
$var wire 1 ,c en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,` a $end
$var wire 1 ,a b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 ,d S_in $end
$var wire 1 ,e P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,f S_out $end
$var wire 1 ,g P_out $end

$scope module serial $end
$var wire 1 ,d a $end
$var wire 1 ,f b $end
$var wire 1 ,h en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,e a $end
$var wire 1 ,f b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 ,i S_in $end
$var wire 1 ,j P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,k S_out $end
$var wire 1 ,l P_out $end

$scope module serial $end
$var wire 1 ,i a $end
$var wire 1 ,k b $end
$var wire 1 ,m en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,j a $end
$var wire 1 ,k b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 ,n S_in $end
$var wire 1 ,o P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,p S_out $end
$var wire 1 ,q P_out $end

$scope module serial $end
$var wire 1 ,n a $end
$var wire 1 ,p b $end
$var wire 1 ,r en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,o a $end
$var wire 1 ,p b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 ,s S_in $end
$var wire 1 ,t P_in $end
$var wire 1 *} sel_P_S $end
$var wire 1 ,u S_out $end
$var wire 1 ,v P_out $end

$scope module serial $end
$var wire 1 ,s a $end
$var wire 1 ,u b $end
$var wire 1 ,w en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ,t a $end
$var wire 1 ,u b $end
$var wire 1 *} en $end
$upscope $end

$upscope $end

$upscope $end


$scope module srlzr_rd $end
$var wire 1 *~ sel_p_s $end
$var wire 1 + s_in $end
$var wire 1 *{ rst $end
$var wire 1 *w clk $end
$var wire 16 ,x P_in [15:0] $end
$var wire 1 ,y s_out $end
$var wire 16 *s P_out [15:0] $end
$var wire 16 ,z q [15:0] $end
$var wire 16 ,{ d [15:0] $end

$scope module _bit[0].dff $end
$var wire 1 ,| data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 ,} q $end
$upscope $end


$scope module _bit[1].dff $end
$var wire 1 ,~ data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -! q $end
$upscope $end


$scope module _bit[2].dff $end
$var wire 1 -" data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -# q $end
$upscope $end


$scope module _bit[3].dff $end
$var wire 1 -$ data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -% q $end
$upscope $end


$scope module _bit[4].dff $end
$var wire 1 -& data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -' q $end
$upscope $end


$scope module _bit[5].dff $end
$var wire 1 -( data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -) q $end
$upscope $end


$scope module _bit[6].dff $end
$var wire 1 -* data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -+ q $end
$upscope $end


$scope module _bit[7].dff $end
$var wire 1 -, data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -- q $end
$upscope $end


$scope module _bit[8].dff $end
$var wire 1 -. data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -/ q $end
$upscope $end


$scope module _bit[9].dff $end
$var wire 1 -0 data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -1 q $end
$upscope $end


$scope module _bit[10].dff $end
$var wire 1 -2 data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -3 q $end
$upscope $end


$scope module _bit[11].dff $end
$var wire 1 -4 data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -5 q $end
$upscope $end


$scope module _bit[12].dff $end
$var wire 1 -6 data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -7 q $end
$upscope $end


$scope module _bit[13].dff $end
$var wire 1 -8 data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -9 q $end
$upscope $end


$scope module _bit[14].dff $end
$var wire 1 -: data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -; q $end
$upscope $end


$scope module _bit[15].dff $end
$var wire 1 -< data $end
$var wire 1 *w clk $end
$var wire 1 *{ reset $end
$var reg 1 -= q $end
$upscope $end


$scope module bt[0].pts $end
$var wire 1 -> S_in $end
$var wire 1 -? P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -@ S_out $end
$var wire 1 -A P_out $end

$scope module serial $end
$var wire 1 -> a $end
$var wire 1 -@ b $end
$var wire 1 -B en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -? a $end
$var wire 1 -@ b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[1].pts $end
$var wire 1 -C S_in $end
$var wire 1 -D P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -E S_out $end
$var wire 1 -F P_out $end

$scope module serial $end
$var wire 1 -C a $end
$var wire 1 -E b $end
$var wire 1 -G en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -D a $end
$var wire 1 -E b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[2].pts $end
$var wire 1 -H S_in $end
$var wire 1 -I P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -J S_out $end
$var wire 1 -K P_out $end

$scope module serial $end
$var wire 1 -H a $end
$var wire 1 -J b $end
$var wire 1 -L en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -I a $end
$var wire 1 -J b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[3].pts $end
$var wire 1 -M S_in $end
$var wire 1 -N P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -O S_out $end
$var wire 1 -P P_out $end

$scope module serial $end
$var wire 1 -M a $end
$var wire 1 -O b $end
$var wire 1 -Q en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -N a $end
$var wire 1 -O b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[4].pts $end
$var wire 1 -R S_in $end
$var wire 1 -S P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -T S_out $end
$var wire 1 -U P_out $end

$scope module serial $end
$var wire 1 -R a $end
$var wire 1 -T b $end
$var wire 1 -V en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -S a $end
$var wire 1 -T b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[5].pts $end
$var wire 1 -W S_in $end
$var wire 1 -X P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -Y S_out $end
$var wire 1 -Z P_out $end

$scope module serial $end
$var wire 1 -W a $end
$var wire 1 -Y b $end
$var wire 1 -[ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -X a $end
$var wire 1 -Y b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[6].pts $end
$var wire 1 -\ S_in $end
$var wire 1 -] P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -^ S_out $end
$var wire 1 -_ P_out $end

$scope module serial $end
$var wire 1 -\ a $end
$var wire 1 -^ b $end
$var wire 1 -` en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -] a $end
$var wire 1 -^ b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[7].pts $end
$var wire 1 -a S_in $end
$var wire 1 -b P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -c S_out $end
$var wire 1 -d P_out $end

$scope module serial $end
$var wire 1 -a a $end
$var wire 1 -c b $end
$var wire 1 -e en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -b a $end
$var wire 1 -c b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[8].pts $end
$var wire 1 -f S_in $end
$var wire 1 -g P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -h S_out $end
$var wire 1 -i P_out $end

$scope module serial $end
$var wire 1 -f a $end
$var wire 1 -h b $end
$var wire 1 -j en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -g a $end
$var wire 1 -h b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[9].pts $end
$var wire 1 -k S_in $end
$var wire 1 -l P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -m S_out $end
$var wire 1 -n P_out $end

$scope module serial $end
$var wire 1 -k a $end
$var wire 1 -m b $end
$var wire 1 -o en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -l a $end
$var wire 1 -m b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[10].pts $end
$var wire 1 -p S_in $end
$var wire 1 -q P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -r S_out $end
$var wire 1 -s P_out $end

$scope module serial $end
$var wire 1 -p a $end
$var wire 1 -r b $end
$var wire 1 -t en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -q a $end
$var wire 1 -r b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[11].pts $end
$var wire 1 -u S_in $end
$var wire 1 -v P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -w S_out $end
$var wire 1 -x P_out $end

$scope module serial $end
$var wire 1 -u a $end
$var wire 1 -w b $end
$var wire 1 -y en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -v a $end
$var wire 1 -w b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[12].pts $end
$var wire 1 -z S_in $end
$var wire 1 -{ P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 -| S_out $end
$var wire 1 -} P_out $end

$scope module serial $end
$var wire 1 -z a $end
$var wire 1 -| b $end
$var wire 1 -~ en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 -{ a $end
$var wire 1 -| b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[13].pts $end
$var wire 1 .! S_in $end
$var wire 1 ." P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 .# S_out $end
$var wire 1 .$ P_out $end

$scope module serial $end
$var wire 1 .! a $end
$var wire 1 .# b $end
$var wire 1 .% en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 ." a $end
$var wire 1 .# b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end


$scope module bt[14].pts $end
$var wire 1 .& S_in $end
$var wire 1 .' P_in $end
$var wire 1 *~ sel_P_S $end
$var wire 1 .( S_out $end
$var wire 1 .) P_out $end

$scope module serial $end
$var wire 1 .& a $end
$var wire 1 .( b $end
$var wire 1 .* en $end
$upscope $end


$scope module parallel_in $end
$var wire 1 .' a $end
$var wire 1 .( b $end
$var wire 1 *~ en $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0!
1"
b00000000 8
0V
0W
0J
xP
09
0N
0F
0E
0G
x@
0A
0T
xQ
01
02
0U
0R
0I
0D
1C
1B
1H
b00 >
b10 ?
0O
1:
b00 S
b00 ;
b00000 X
b00000 =
b00000 <
b00000 Y
b00000000 L
b00001111 M
x"#
x"B
x"%
x"@
x"'
x">
x")
x"<
x"+
x":
x"-
x"8
x"/
x"6
x"1
x"4
x"3
x"2
x"5
x"0
x"7
x".
x"9
x",
x";
x"*
x"=
x"(
x"?
x"&
x"A
x"$
x#4
x#S
x#6
x#Q
x#8
x#O
x#:
x#M
x#<
x#K
x#>
x#I
x#@
x#G
x#B
x#E
x#D
x#C
x#F
x#A
x#H
x#?
x#J
x#=
x#L
x#;
x#N
x#9
x#P
x#7
x#R
x#5
0f
0b
0a
0c
0g
0\
1_
1`
1^
0h
0i
0j
0k
b000 e
b000 d
b00 ]
0m
0n
1w
0s
1r
0t
0x
1p
1q
0y
0z
0{
0|
b000 v
b001 u
b10 o
b00000000 $P
0$n
0$o
0$b
x$h
0$Q
0$f
0$^
0$]
0$_
x$X
1$Y
0$l
x$i
0$I
0$J
0$m
0$j
0$a
0$\
1$[
1$Z
1$`
b00 $V
b10 $W
0$g
1$R
b00 $k
b00 $S
b00000 $p
b00000 $U
b00000 $T
b00000 $q
b00000000 $d
b00001111 $e
x%;
x%Z
x%=
x%X
x%?
x%V
x%A
x%T
x%C
x%R
x%E
x%P
x%G
x%N
x%I
x%L
x%K
x%J
x%M
x%H
x%O
x%F
x%Q
x%D
x%S
x%B
x%U
x%@
x%W
x%>
x%Y
x%<
x&L
x&k
x&N
x&i
x&P
x&g
x&R
x&e
x&T
x&c
x&V
x&a
x&X
x&_
x&Z
x&]
x&\
x&[
x&^
x&Y
x&`
x&W
x&b
x&U
x&d
x&S
x&f
x&Q
x&h
x&O
x&j
x&M
0$~
0$z
0$y
0${
0%!
0$t
1$w
1$x
1$v
0%"
0%#
0%$
0%%
b000 $}
b000 $|
b00 $u
0%'
0%(
1%1
0%-
1%,
0%.
0%2
1%*
1%+
0%3
0%4
0%5
0%6
b000 %0
b001 %/
b10 %)
b00000000 'h
0((
0()
0'z
x("
0'i
0'~
0'v
0'u
0'w
x'p
0'q
0(&
x(#
0'a
0'b
0('
0($
0'y
0't
1's
1'r
1'x
b00 'n
b10 'o
0(!
1'j
b00 (%
b00 'k
b00000 (*
b00000 'm
b00000 'l
b00000 (+
b00000000 '|
b00001111 '}
x(S
x(r
x(U
x(p
x(W
x(n
x(Y
x(l
x([
x(j
x(]
x(h
x(_
x(f
x(a
x(d
x(c
x(b
x(e
x(`
x(g
x(^
x(i
x(\
x(k
x(Z
x(m
x(X
x(o
x(V
x(q
x(T
x)d
x*%
x)f
x*#
x)h
x*!
x)j
x)}
x)l
x){
x)n
x)y
x)p
x)w
x)r
x)u
x)t
x)s
x)v
x)q
x)x
x)o
x)z
x)m
x)|
x)k
x)~
x)i
x*"
x)g
x*$
x)e
0(8
0(4
0(3
0(5
0(9
0(.
1(1
1(2
1(0
0(:
0(;
0(<
0(=
b000 (7
b000 (6
b00 (/
0(?
0(@
1(I
0(E
1(D
0(F
0(J
1(B
1(C
0(K
0(L
0(M
0(N
b000 (H
b001 (G
b10 (A
b00000000 +"
0+@
0+A
0+4
x+:
0+#
0+8
0+0
0+/
0+1
x+*
0++
0+>
x+;
0*y
0*z
0+?
0+<
0+3
0+.
1+-
1+,
1+2
b00 +(
b10 +)
0+9
1+$
b00 +=
b00 +%
b00000 +B
b00000 +'
b00000 +&
b00000 +C
b00000000 +6
b00001111 +7
x+k
x,,
x+m
x,*
x+o
x,(
x+q
x,&
x+s
x,$
x+u
x,"
x+w
x+~
x+y
x+|
x+{
x+z
x+}
x+x
x,!
x+v
x,#
x+t
x,%
x+r
x,'
x+p
x,)
x+n
x,+
x+l
x,|
x-=
x,~
x-;
x-"
x-9
x-$
x-7
x-&
x-5
x-(
x-3
x-*
x-1
x-,
x-/
x-.
x--
x-0
x-+
x-2
x-)
x-4
x-'
x-6
x-%
x-8
x-#
x-:
x-!
x-<
x,}
0+P
0+L
0+K
0+M
0+Q
0+F
1+I
1+J
1+H
0+R
0+S
0+T
0+U
b000 +O
b000 +N
b00 +G
0+W
0+X
1+a
0+]
1+\
0+^
0+b
1+Z
1+[
0+c
0+d
0+e
0+f
b000 +`
b001 +_
b10 +Y
b0000000000000000 *s
b0000000000000000 '[
b0000000000000000 $C
b0000000000000000 (
0"D
0"I
0"N
0"S
0"X
0"]
0"b
0"g
0"l
0"q
0"v
0"{
0#"
0#'
0#,
0#T
0#Y
0#^
0#c
0#h
0#m
0#r
0#w
0#|
0$#
0$(
0$-
0$2
0$7
0$<
0%\
1%a
1%f
1%k
0%p
0%u
1%z
1&!
1&&
0&+
0&0
0&5
0&:
0&?
0&D
0&l
0&q
0&v
0&{
0'"
0''
0',
0'1
0'6
0';
0'@
0'E
0'J
0'O
0'T
0(t
0(y
0(~
0)%
0)*
0)/
0)4
0)9
0)>
0)C
0)H
0)M
0)R
0)W
0)\
0*&
0*+
0*0
0*5
0*:
0*?
0*D
0*I
0*N
0*S
0*X
0*]
0*b
0*g
0*l
0,.
0,3
0,8
0,=
0,B
0,G
0,L
0,Q
0,V
0,[
0,`
0,e
0,j
0,o
0,t
0->
0-C
0-H
0-M
0-R
0-W
0-\
0-a
0-f
0-k
0-p
0-u
0-z
0.!
0.&
0*q
0'Y
1$A
0&
0*t
0'\
0$D
0)
0*u
0']
0$E
0*
b0000000000000000 *r
b0000000000000000 'Z
b0000001110011101 $B
b0000000000000000 '
0#
1%
1$
z+
z-
z,
b0000000000000000 #2
0#W
0#\
0#a
0#f
0#k
0#p
0#u
0#z
0$!
0$&
0$+
0$0
0$5
0$:
0$?
b0000000000000000 &J
0&o
0&t
0&y
0&~
0'%
0'*
0'/
0'4
0'9
0'>
0'C
0'H
0'M
0'R
0'W
b0000000000000000 )b
0*)
0*.
0*3
0*8
0*=
0*B
0*G
0*L
0*Q
0*V
0*[
0*`
0*e
0*j
0*o
b0000000000000000 ,z
0-A
0-F
0-K
0-P
0-U
0-Z
0-_
0-d
0-i
0-n
0-s
0-x
0-}
0.$
0.)
0"C
0"H
0"M
0$=
0"R
0$8
0"W
0$3
0"\
0$.
0"a
0$)
0"f
0$$
0"k
0#}
0"p
0#x
0"u
0#s
0"z
0#n
0#!
0#i
0#&
0#d
0#+
0#_
0#Z
0#U
z7
1#X
1#]
1#b
1#g
1#l
1#q
1#v
1#{
1$"
1$'
1$,
1$1
1$6
1$;
1$@
0"G
0"L
0"Q
0"V
0"[
0"`
0"e
0"j
0"o
0"t
0"y
0"~
0#%
0#*
0#/
0#1
15
06
14
13
0K
0.
00
0/
b0000000000000000 #0
1Z
x[
0l
0}
b0000000000000000 ~
b0000000000000000 "!
0"F
0"K
0"P
0"U
0"Z
0"_
0"d
0"i
0"n
0"s
0"x
0"}
0#$
0#)
0#.
b0000000000000000 ""
0"E
0"J
0"O
0"T
0"Y
0"^
0"c
0"h
0"m
0"r
0"w
0"|
0##
0#(
0#-
b000000000000000z #3
0#V
0#[
0#`
0#e
0#j
0#o
0#t
0#y
0#~
0$%
0$*
0$/
0$4
0$9
0$>
0%[
0%`
0%e
0'U
0%j
0'P
0%o
0'K
0%t
0'F
0%y
0'A
0%~
0'<
0&%
0'7
0&*
0'2
0&/
0'-
0&4
0'(
0&9
0'#
0&>
0&|
0&C
0&w
0&r
0&m
z$O
1&p
1&u
1&z
1'!
1'&
1'+
1'0
1'5
1':
1'?
1'D
1'I
1'N
1'S
1'X
0%_
0%d
0%i
0%n
0%s
0%x
0%}
0&$
0&)
0&.
0&3
0&8
0&=
0&B
0&G
0&I
1$M
0$N
1$L
1$K
0$c
0$F
0$H
0$G
b0000000000000000 &H
1$r
x$s
1%&
0%7
b0000000000000000 %8
b0000000000000000 %9
0%^
0%c
0%h
0%m
0%r
0%w
0%|
0&#
0&(
0&-
0&2
0&7
0&<
0&A
0&F
b0000001110011101 %:
0%]
1%b
1%g
1%l
0%q
0%v
1%{
1&"
1&'
0&,
0&1
0&6
0&;
0&@
0&E
b000000000000000z &K
0&n
0&s
0&x
0&}
0'$
0')
0'.
0'3
0'8
0'=
0'B
0'G
0'L
0'Q
0'V
0(s
0(x
0(}
0*m
0)$
0*h
0))
0*c
0).
0*^
0)3
0*Y
0)8
0*T
0)=
0*O
0)B
0*J
0)G
0*E
0)L
0*@
0)Q
0*;
0)V
0*6
0)[
0*1
0*,
0*'
z'g
1**
1*/
1*4
1*9
1*>
1*C
1*H
1*M
1*R
1*W
1*\
1*a
1*f
1*k
1*p
0(w
0(|
0)#
0)(
0)-
0)2
0)7
0)<
0)A
0)F
0)K
0)P
0)U
0)Z
0)_
0)a
1'e
0'f
1'd
1'c
0'{
0'^
0'`
0'_
b0000000000000000 )`
1(,
x(-
0(>
0(O
b0000000000000000 (P
b0000000000000000 (Q
0(v
0({
0)"
0)'
0),
0)1
0)6
0);
0)@
0)E
0)J
0)O
0)T
0)Y
0)^
b0000000000000000 (R
0(u
0(z
0)!
0)&
0)+
0)0
0)5
0):
0)?
0)D
0)I
0)N
0)S
0)X
0)]
b000000000000000z )c
0*(
0*-
0*2
0*7
0*<
0*A
0*F
0*K
0*P
0*U
0*Z
0*_
0*d
0*i
0*n
0,-
0,2
0,7
0.'
0,<
0."
0,A
0-{
0,F
0-v
0,K
0-q
0,P
0-l
0,U
0-g
0,Z
0-b
0,_
0-]
0,d
0-X
0,i
0-S
0,n
0-N
0,s
0-I
0-D
0-?
z+!
1-B
1-G
1-L
1-Q
1-V
1-[
1-`
1-e
1-j
1-o
1-t
1-y
1-~
1.%
1.*
0,1
0,6
0,;
0,@
0,E
0,J
0,O
0,T
0,Y
0,^
0,c
0,h
0,m
0,r
0,w
0,y
1*}
0*~
1*|
1*{
0+5
0*v
0*x
0*w
b0000000000000000 ,x
1+D
x+E
0+V
0+g
b0000000000000000 +h
b0000000000000000 +i
0,0
0,5
0,:
0,?
0,D
0,I
0,N
0,S
0,X
0,]
0,b
0,g
0,l
0,q
0,v
b0000000000000000 +j
0,/
0,4
0,9
0,>
0,C
0,H
0,M
0,R
0,W
0,\
0,a
0,f
0,k
0,p
0,u
b000000000000000z ,{
0-@
0-E
0-J
0-O
0-T
0-Y
0-^
0-c
0-h
0-m
0-r
0-w
0-|
0.#
0.(
$end
